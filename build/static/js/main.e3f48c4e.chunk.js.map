{"version":3,"sources":["book.js","bookshelf.js","FourthQuarterPassing2021.js","ShowBookcase.js","SearchBooks.js","BooksAPI.js","PasserRatingInput.js","App.js","index.js"],"names":["Book","_this$props","this","props","book","updateShelf","react_default","a","createElement","key","id","className","style","width","height","backgroundImage","concat","imageLinks","thumbnail","value","shelf","onChange","event","target","disabled","title","authors","Component","Bookshelf","bookshelfTitle","bookshelfBooks","map","src_book","statCategories","excelData","stats","replace","split","createData","rowOfPlayerData","playerName","playerTeam","firstName","push","lastName","team","join","getPlayerData","statLineIndex","getIndividualPlayerStatString","ShowBookcase","books","currentlyReading","filter","wantToRead","read","bookshelf","react_router_dom","to","SearchBooks","type","placeholder","React","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","PasserRatingInput","BooksApp","state","changedBook","_this","setState","BooksAPI","_this2","data","_this3","react_router","exact","path","render","src_ShowBookcase","_ref","history","src_SearchBooks","_ref2","src_PasserRatingInput","ReactDOM","src_App","document","getElementById"],"mappings":"8PA+BeA,mLAvBD,IAAAC,EACwBC,KAAKC,MAA3BC,EADFH,EACEG,KAAMC,EADRJ,EACQI,YAEd,OACAC,EAAAC,EAAAC,cAAA,OAAKC,IAAKL,EAAKM,GAAIC,UAAU,QAC7BL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aAAaC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,OAAAC,OAASZ,EAAKa,WAAWC,UAAzB,QAC7EZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACbL,EAAAC,EAAAC,cAAA,UAAQW,MAAOf,EAAKgB,MAAOC,SAAU,SAACC,GAAD,OAAWjB,EAAYD,EAAMkB,EAAMC,OAAOJ,SAC7Eb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,OAAOK,UAAQ,GAA7B,cACAlB,EAAAC,EAAAC,cAAA,UAAQW,MAAM,oBAAd,qBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,cAAd,gBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,QAAd,QACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,QAAd,WAINb,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAcP,EAAKqB,OAClCnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAgBP,EAAKsB,iBAvBzBC,aCwBJC,mLAhBF,IAAA3B,EACkDC,KAAKC,MAArD0B,EADF5B,EACE4B,eAAgBC,EADlB7B,EACkB6B,eAAgBzB,EADlCJ,EACkCI,YAEvC,OACAC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,mBAAmBkB,GACjCvB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,cACbmB,EAAeC,IAAI,SAAC3B,GAAD,OACdE,EAAAC,EAAAC,cAACwB,EAAD,CAAM5B,KAAMA,EAAMC,YAAaA,EAAaI,IAAKL,EAAKM,iBAhBhDiB,aC8HlBM,EAAiB,SAACC,GACpB,OALqBC,EAKED,EAJlBC,EAAMC,QAAQ,MAAO,QAIQC,MAAM,OALpB,IAACF,GA8CnBG,EAAa,SAACJ,GAGhB,OAAO5B,EAAAC,EAAAC,cAAA,aACTF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UA7BkB,SAAC+B,GACnB,IAAMC,EAAa,GACbC,EAAa,GAGbC,EAAYH,EAAgBF,MAAM,KAAK,GAC7CG,EAAWG,KAAKD,GAIhB,IAAME,EAAWL,EAAgBF,MAAM,KAAK,GAAGA,MAAM,MAAM,GAC3DG,EAAWG,KAAKC,GAEhB,IAAMC,EAAON,EAAgBF,MAAM,KAAK,GAAGA,MAAM,MAAM,GAGvD,OAFAI,EAAWE,KAAKE,GAETvC,EAAAC,EAAAC,cAAA,WAAMgC,EAAWM,KAAK,KAAtB,IAA6BL,GAa/BM,CAlC6B,SAACb,EAAWc,GAE9C,OAAOf,EAAeC,GAAWc,GAgCdC,CAA8Bf,EAAW,QCnHjDgB,mLAvDF,IAAAjD,EAC0BC,KAAKC,MAA5BgD,EADHlD,EACGkD,MAAO9C,EADVJ,EACUI,YAGT+C,EAAmBD,EAAME,OAAO,SAACjD,GAAD,MACnB,qBAAfA,EAAKgB,QACHkC,EAAaH,EAAME,OAAO,SAACjD,GAAD,MACb,eAAfA,EAAKgB,QACHmC,EAAOJ,EAAME,OAAO,SAACjD,GAAD,MACP,SAAfA,EAAKgB,QAET,OAEId,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACbL,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACXL,EAAAC,EAAAC,cAAA,WACYF,EAAAC,EAAAC,cAACgD,EAAD,CACI3B,eAAe,oBACfC,eAAgBsB,EAChB/C,YAAaA,ID4KpCiC,EAtKqB,6jGCHFhC,EAAAC,EAAAC,cAACgD,EAAD,CACI3B,eAAe,oBACfC,eAAgBsB,EAChB/C,YAAaA,IAEjBC,EAAAC,EAAAC,cAACgD,EAAD,CACI3B,eAAe,eACfC,eAAgBwB,EAChBjD,YAAaA,IAEjBC,EAAAC,EAAAC,cAACgD,EAAD,CACI3B,eAAe,OACfC,eAAgByB,EAChBlD,YAAaA,MAIjCC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CACEC,GAAG,SACH/C,UAAU,eAFZ,uBAjDWgB,aCuBZgC,mLAxBP,OACIrD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACbL,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAMC,GAAG,IAAI/C,UAAU,gBAAvB,SACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BASbL,EAAAC,EAAAC,cAAA,SAAOoD,KAAK,OAAOC,YAAY,gCAGnCvD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,wBAnBFmD,IAAMnC,mBCF1BoC,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAcNS,EAAS,SAACrE,EAAMgB,GAAP,OACpBsD,MAAK,GAAA1D,OAAI+C,EAAJ,WAAA/C,OAAiBZ,EAAKM,IAAM,CAC/BiE,OAAQ,MACRL,QAAQM,OAAAC,EAAA,EAAAD,CAAA,GACHN,EADE,CAELQ,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAE7D,YACtB8D,KAAK,SAAAC,GAAG,OAAIA,EAAIC,iBCZNC,0LAhBP,OACI/E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACbL,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAMC,GAAG,IAAI/C,UAAU,gBAAvB,SACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACbL,EAAAC,EAAAC,cAAA,SAAOoD,KAAK,OAAOC,YAAW,0BAGlCvD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,wBAXImD,IAAMnC,YCoDvB2D,6MA9CbC,MAAQ,CACNpC,MAAO,MAWT9C,YAAc,SAACmF,EAAapE,GAC1BoE,EAAYpE,MAAQA,EACpBqE,EAAKC,SAAS,iBAAO,CACnBvC,MAAOsC,EAAKF,MAAMpC,MAAME,OAAO,SAACjD,GAAD,OAAWA,EAAKM,KAAO8E,EAAY9E,KAAKM,OAAO,CAACwE,OAEjFG,EAAgBH,EAAapE,uFAdX,IAAAwE,EAAA1F,KFSpBwE,MAAK,GAAA1D,OAAI+C,EAAJ,UAAiB,CAAEO,YACrBY,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAW,GAAI,OAAIA,EAAK1C,QEThB+B,KAAK,SAAC/B,GACHyC,EAAKF,SAAS,iBAAO,CACjBvC,8CAaH,IAAA2C,EAAA5F,KACP,OAGEI,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAEbL,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5B5F,EAAAC,EAAAC,cAAC2F,EAAD,CACEhD,MAAO2C,EAAKP,MAAMpC,MAClB9C,YAAayF,EAAKzF,iBAGtBC,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOE,KAAK,UAAUC,OAAQ,SAAAE,KAAEC,QAAF,OAC5B/F,EAAAC,EAAAC,cAAC8F,EAAD,SAIFhG,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,OAAQ,SAAAK,KAAEF,QAAF,OACnC/F,EAAAC,EAAAC,cAACgG,EAAD,iBAvCa1C,IAAMnC,iBCF7B8E,IAASP,OACL5F,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACInD,EAAAC,EAAAC,cAACkG,EAAD,OACcC,SAASC,eAAe","file":"static/js/main.e3f48c4e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Book extends Component{\n    static propTypes = {\n        updateShelf: PropTypes.func.isRequired\n    }\n\n    render () {\n        const { book, updateShelf } = this.props;\n\n        return (\n        <div key={book.id} className=\"book\">\n        <div className=\"book-top\">\n          <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\n          <div className=\"book-shelf-changer\">\n            <select value={book.shelf} onChange={(event) => updateShelf(book, event.target.value)}>\n              <option value=\"move\" disabled>Move to...</option>\n              <option value=\"currentlyReading\">Currently Reading</option>\n              <option value=\"wantToRead\">Want to Read</option>\n              <option value=\"read\">Read</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{book.title}</div>\n        <div className=\"book-authors\">{book.authors}</div>\n      </div>\n    )}\n}\n\nexport default Book;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Book from './book';\n\nclass Bookshelf extends Component {\n    static propTypes = {\n        bookshelfTitle: PropTypes.string.isRequired,\n        bookshelfBooks: PropTypes.array.isRequired,\n        updateShelf: PropTypes.func.isRequired\n    }\n\n    render() {\n        const {bookshelfTitle, bookshelfBooks, updateShelf } = this.props;\n\n        return(\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{bookshelfTitle}</h2>\n          <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n            {bookshelfBooks.map((book) => (\n                  <Book book={book} updateShelf={updateShelf} key={book.id}/>\n                ))}\n            </ol>\n          </div>\n        </div>\n            )}}\n\nexport default Bookshelf;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const header = `Player Team Att Cmp Yds TD Int`;\n\nconst isTeamName = (value) =>\n  \"ARI\" ||\n  \"ATL\" ||\n  \"BAL\" ||\n  \"BUF\" ||\n  \"CAR\" ||\n  \"CHI\" ||\n  \"CIN\" ||\n  \"CLE\" ||\n  \"DAL\" ||\n  \"DEN\" ||\n  \"DET\" ||\n  \"DET\" ||\n  \"GB\" ||\n  \"HOU\" ||\n  \"IND\" ||\n  \"JAX\" ||\n  \"KC\" ||\n  \"LA\" ||\n  \"LAC\" ||\n  \"LV\" ||\n  \"MIA\" ||\n  \"MIN\" ||\n  \"NE\" ||\n  \"NO\" ||\n  \"NYG\" ||\n  \"NYJ\" ||\n  \"PHI\" ||\n  \"PIT\" ||\n  \"SEA\" ||\n  \"SF\" ||\n  \"TB\" ||\n  \"TEN\" ||\n  \"WAS\";\n\nconst FourthQuarterPassing2021 = `\nJustin Herbert\tLAC\t201\t125\t1,583\t14\t7\nDerek Carr\tLV\t164\t116\t1,375\t5\t4\nBen Roethlisberger\tPIT\t189\t132\t1,375\t12\t1\nKirk Cousins\tMIN\t163\t109\t1,337\t8\t2\nTom Brady\tTB\t162\t106\t1,172\t9\t2\nJared Goff\tDET\t180\t118\t1,131\t3\t5\nTrevor Lawrence\tJAX\t195\t110\t1,123\t3\t5\nMatthew Stafford\tDET\t134\t96\t1,118\t12\t0\nJoe Burrow\tCIN\t123\t82\t1,081\t10\t6\nMatt Ryan\tATL\t142\t97\t1,062\t6\t6\nJosh Allen\tBUF\t135\t96\t1,027\t10\t0\nDavis Mills\tHOU\t148\t96\t989\t7\t4\nPatrick Mahomes\tKC\t121\t81\t979\t11\t2\nCarson Wentz\tIND\t124\t77\t957\t5\t3\nJimmy Garoppolo\tSF\t103\t69\t947\t5\t4\nTaylor Heinicke\tWAS\t145\t94\t931\t5\t7\nTeddy Bridgewater\tCAR\t122\t84\t928\t8\t4\nDak Prescott\tDAL\t126\t85\t917\t8\t4\nMac Jones\tNE\t129\t81\t914\t8\t3\nKyler Murray\tARI\t121\t80\t914\t3\t1\nRyan Tannehill\tTEN\t122\t85\t903\t5\t5\nZach Wilson\tNYJ\t138\t75\t894\t4\t3\nJalen Hurts\tPHI\t107\t65\t784\t7\t0\nAaron Rodgers\tGB\t93\t59\t753\t6\t0\nTua Tagovailoa\tMIA\t97\t66\t725\t7\t5\nLamar Jackson\tBAL\t100\t62\t724\t5\t4\nSam Darnold\tCAR\t120\t69\t698\t4\t4\nRussell Wilson\tSEA\t101\t62\t644\t5\t2\nBaker Mayfield\tCLE\t110\t56\t607\t4\t4\nDaniel Jones\tNYG\t111\t62\t591\t2\t1\nJustin Fields\tCHI\t89\t51\t579\t3\t4\nTrevor Siemian\tNO\t68\t46\t471\t6\t1\nAndy Dalton\tCHI\t76\t44\t426\t2\t4\nTyler Huntley\tBAL\t72\t46\t404\t1\t2\nMike Glennon\tNYG\t75\t42\t351\t3\t6\nDrew Lock\tDEN\t43\t25\t326\t1\t1\nJacoby Brissett\tMIA\t50\t33\t310\t2\t1\nJordan Love\tGB\t37\t22\t264\t2\t3\nTaysom Hill\tNO\t31\t18\t262\t2\t3\nGeno Smith\tSEA\t38\t25\t242\t1\t1\nJameis Winston\tNO\t30\t15\t241\t4\t1\nMike White\tNYJ\t39\t23\t233\t2\t0\nJosh Johnson\tBAL\t34\t24\t231\t3\t2\nBrian Hoyer\tNE\t11\t9\t227\t1\t0\nTrey Lance\tSF\t28\t15\t225\t2\t0\nCam Newton\tCAR\t32\t23\t214\t2\t1\nPhillip Walker\tCAR\t38\t15\t196\t1\t1\nCooper Rush\tDAL\t21\t15\t165\t2\t0\nTyrod Taylor\tHOU\t34\t19\t154\t0\t0\nColt McCoy\tARI\t23\t17\t152\t0\t0\nTim Boyle\tDET\t26\t19\t147\t0\t3\nJake Fromm\tNYG\t28\t13\t146\t1\t1\nCase Keenum\tCLE\t23\t14\t121\t1\t0\nKyle Allen\tWAS\t19\t12\t120\t1\t0\nJoe Flacco\tNYJ\t11\t8\t101\t1\t0\nNick Foles\tCHI\t11\t7\t99\t1\t0\nGarrett Gilbert\tWAS\t13\t10\t82\t0\t0\nChad Henne\tKC\t16\t11\t82\t0\t0\nBrandon Allen\tCIN\t17\t8\t74\t2\t0\nGardner Minshew\tPHI\t10\t7\t70\t1\t1\nBlaine Gabbert\tTB\t11\t7\t67\t0\t0\nIan Book\tNO\t6\t2\t60\t0\t1\nMason Rudolph\tPIT\t14\t8\t60\t0\t0\nNick Mullens\tCLE\t9\t6\t56\t1\t0\nCedrick Wilson\tDAL\t2\t2\t53\t0\t0\nMitchell Trubisky\tBUF\t8\t6\t43\t0\t1\nSean Mannion\tMIN\t7\t3\t38\t0\t0\nJakobi Meyers\tNE\t1\t1\t30\t0\t0\nJacob Eason\tSEA\t5\t2\t25\t0\t1\nChris Streveler\tBAL\t7\t4\t20\t0\t0\nJosh Rosen\tATL\t11\t2\t19\t0\t2\nTommy Townsend\tKC\t1\t1\t16\t0\t0\nKellen Mond\tMIN\t3\t2\t5\t0\t0\nJohn Wolford\tLA\t4\t1\t5\t0\t1\nKeenan Allen\tLAC\t1\t0\t0\t0\t0\nCole Beasley\tBUF\t1\t0\t0\t0\t0\nDavid Blough\tDET\t0\t0\t0\t0\t0\nA.J. Brown\tTEN\t2\t0\t0\t0\t0\nJamison Crowder\tNYJ\t0\t0\t0\t0\t0\nFeleipe Franks\tATL\t1\t0\t0\t0\t1\nMike Gesicki\tMIA\t1\t0\t0\t0\t0\nAndy Lee\tARI\t0\t0\t0\t0\t0\nDavid Montgomery\tCHI\t1\t0\t0\t0\t1\n`;\n\nconst statsWithCommas = (stats) => {\n  return stats.replace(/\\n/g, \"---\"); // Break up with tabs\n};\n\nconst statCategories = (excelData) => {\n    return statsWithCommas(excelData).split(\"---\");\n};\n\nconst FourthQuarterPassingStatsArray = (excelData) => {\n    return statCategories(excelData);\n}\n\nconst getArrayOfAllPlayerStatLines = (excelData) => {\n    // For each player stat line in the array, push it to a new array of player stat lines.\n    const allPlayerStatLines = [];\n\n    FourthQuarterPassingStatsArray(excelData).forEach(statLine =>\n        allPlayerStatLines.push(statLine));\n\n    return allPlayerStatLines;\n}\n\nconst getIndividualPlayerStatString = (excelData, statLineIndex) => {\n    // Pull an individual row of player data from all of the stats.\n    return statCategories(excelData)[statLineIndex];\n}\n\nconst getPlayerData = (rowOfPlayerData) => {\n    const playerName = [];\n    const playerTeam = [];\n\n    // The first index in a row of player data is the First Name.\n    const firstName = rowOfPlayerData.split(\" \")[0];\n    playerName.push(firstName);\n\n    // The second index in a row of player data has to get broken up. It contains last name + the rest of the data.\n    // It's separated by \\t instead of spaces (\" \"). The first index of this piece contains the Last Name.\n    const lastName = rowOfPlayerData.split(\" \")[1].split('\\t')[0];\n    playerName.push(lastName);\n\n    const team = rowOfPlayerData.split(\" \")[1].split('\\t')[1];\n    playerTeam.push(team);\n\n    return <div>{playerName.join(' ')} {playerTeam}</div>;\n}\n\nconst createData = (excelData) => {\n    // Get an individual players stats as a string.\n\n    return <table>\n  <tr>\n    <th>Company</th>\n    <th>Contact</th>\n    <th>Country</th>\n  </tr>\n  <tr>\n    <td>{getPlayerData(getIndividualPlayerStatString(excelData, 2))}</td>\n  </tr>\n    </table>\n\n  // TODO: For each player stat line, get player name\n\n  // TODO: For each player stat line, get attempts\n  // TODO: For each player stat line, get completions\n  // TODO: For each player stat line, get yards\n  // TODO: For each player stat line, get touchdowns\n  // TODO: For each player stat line, get interceptions\n\n  // const team = statCategories(excelData);\n  /*\n    const attempts\n    const completions\n    const yards\n    const touchdowns\n    const interceptions\n*/\n};\n\nexport const FourthQuarterPassingStats = () => {\n  // console.log(createData(FourthQuarterPassing2021));\n  return createData(FourthQuarterPassing2021);\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Bookshelf from './bookshelf';\nimport { Link } from 'react-router-dom';\nimport { FourthQuarterPassingStats } from './FourthQuarterPassing2021';\n\nclass ShowBookcase extends Component {\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        updateShelf: PropTypes.func.isRequired\n    }\n\n    render() {   \n        const { books, updateShelf } = this.props;\n\n        // Functions to filter books to their respective bookshelves:\n        const currentlyReading = books.filter((book) => (\n            book.shelf === 'currentlyReading'));\n        const wantToRead = books.filter((book) => (\n            book.shelf === 'wantToRead'));\n        const read = books.filter((book) => (\n            book.shelf === 'read'));\n        \n        return (\n            \n            <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n                <div>\n                            <Bookshelf\n                                bookshelfTitle='NFL Passing Stats'\n                                bookshelfBooks={currentlyReading}\n                                updateShelf={updateShelf}\n                            />\n                            {FourthQuarterPassingStats()}\n                            <Bookshelf\n                                bookshelfTitle='Currently Reading'\n                                bookshelfBooks={currentlyReading}\n                                updateShelf={updateShelf}\n                            />\n                            <Bookshelf \n                                bookshelfTitle='Want To Read'\n                                bookshelfBooks={wantToRead}\n                                updateShelf={updateShelf}\n                            />\n                            <Bookshelf\n                                bookshelfTitle='Read'\n                                bookshelfBooks={read}\n                                updateShelf={updateShelf}\n                            />\n                </div>\n          </div>\n            <div className=\"open-search\">\n                <Link\n                  to='search'\n                  className='open-search'\n                >\n                Add a book\n                </Link>\n            </div>\n          </div>  \n        )\n    }\n}\n\nexport default ShowBookcase;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SearchBooks extends React.Component {\n    render() {\n        return(\n            <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <Link to='/' className='close-search'>Close</Link>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input type=\"text\" placeholder=\"Search by title or author\"/>\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default SearchBooks;","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(json => console.log(JSON.stringify(json)))\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass PasserRatingInput extends React.Component {\n    render() {\n        return(\n            <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <Link to='/' className='close-search'>Close</Link>\n              <div className=\"search-books-input-wrapper\">\n                <input type=\"text\" placeholder={`Passer Rating Input`}/>\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default PasserRatingInput;","import React from 'react';\nimport ShowBookcase from './ShowBookcase';\nimport SearchBooks from './SearchBooks';\nimport * as BooksAPI from './BooksAPI';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport PasserRatingInput from './PasserRatingInput';\n\nclass BooksApp extends React.Component {\n  state = {\n    books: []\n  }\n  componentDidMount() {\n      BooksAPI.getAll()\n      .then((books) => {\n          this.setState(() => ({\n              books\n          }))\n      })\n  }\n\n  updateShelf = (changedBook, shelf) => {\n    changedBook.shelf = shelf\n    this.setState(() => ({\n      books: this.state.books.filter((book) => (book.id !== changedBook.id)).concat([changedBook])\n    }))\n    BooksAPI.update(changedBook, shelf)\n  }\n  \n  render() {\n    return (\n      // List-books holds the app's main page\n      // List-books-title holds the \"My Reads\" Banner\n      <div className=\"app\">     \n          \n        <Route exact path='/' render={() => (\n          <ShowBookcase\n            books={this.state.books}\n            updateShelf={this.updateShelf}\n          />\n        )} />\n        <Route path='/search' render={({history}) => (\n          <SearchBooks\n        />\n        \n        )} />\n        <Route path='/passer-rating' render={({history}) => (\n          <PasserRatingInput\n        />\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}